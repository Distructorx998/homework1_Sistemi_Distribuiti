version: '3.8'

services:
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: users
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "8081:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 50
    restart: always

  server:
    build: ./server
    ports:
      - "50051:50051"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    restart: always

  datacollector:
    build: ./datacollector
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - backend
      - kafka_network
    restart: always

  alert_system:
    build: ./AlertSystem
    depends_on:
      - kafka
    networks:
      - backend
      - kafka_network
    restart: always

  alert_notification_system:
    build: ./AlertNotificationSystem
    depends_on:
      - kafka
    networks:
      - backend
      - kafka_network
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_network
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - kafka_network
    restart: always
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      retries: 3
      timeout: 20s
      start_period: 10s

  
networks:
  backend:
    driver: bridge
  kafka_network:
    driver: bridge

volumes:
  db_data:
